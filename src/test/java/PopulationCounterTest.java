/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

import static org.mockito.Mockito.*;
import org.junit.jupiter.api.Test;


public class PopulationCounterTest {
    // @Test
    // public void testSomeLibraryMethod() throws Exception {

    //     // Setup
    //     String expected = "World population is: 1,347,982,728\n";

    //     // https://stackoverflow.com/questions/8708342/redirect-console-output-to-string-in-java
    //     ByteArrayOutputStream baos = new ByteArrayOutputStream();
    //     PrintStream ps = new PrintStream(baos);
    //     PrintStream old = System.out;
    //     System.setOut(ps);

    //     // Exercise
    //     PopulationCounter.main(new String[] {"./data/worldcitiespop.csv"});

    //     // Assert
    //     System.out.flush();
    //     String output = baos.toString();
    //     assertEquals(expected, output );

    //     // Teardown
    //     System.setOut(old);
    // }
    Caller file = mock(Caller.class);

    @Test
    public void caller() throws IOException{
        List<String> list = new ArrayList<String>();
        list.add("1");
        list.add("220");
        list.add("25");
        list.add("4");
        when(file.fileCall("./data/worldcitiespop.csv")).thenReturn(list);
        List<String> expected = list;

        List<String> actual = file.fileCall("./data/worldcitiespop.csv");
        assertEquals(expected, actual);
    }

    @Test
    public void fileParse() throws IOException{
        
        // Caller file = mock(Caller.class);
        List<String> list = new ArrayList<String>();
        list.add("ad,aixas,Aix�s,06,,42.4833333,1.4666667");
        list.add("ad,aixirivali,Aixirivali,06,,42.4666667,1.5");
        list.add("ad,aixirivall,Aixirivall,06,,42.4666667,1.5");
        list.add("ad,aixirvall,Aixirvall,06,,42.4666667,1.5");
        when(file.fileCall("./data/worldcitiespop.csv")).thenReturn(list);
        // List<String> expected = list;
        List<String> actual = file.fileCall("./data/worldcitiespop.csv");

        List<String> data = new ArrayList<String>();
        data.add("6");
        data.add("6");
        data.add("6");

        when(file.fileParse(actual)).thenReturn(data);
        List<String> result = file.fileParse(actual);
        assertEquals(result, data);
    }

    @Test
    public void population() throws IOException{
        List<String> list = new ArrayList<String>();
        list.add("ad,aixas,Aix�s,06,,42.4833333,1.4666667");
        list.add("ad,aixirivali,Aixirivali,06,,42.4666667,1.5");
        list.add("ad,aixirivall,Aixirivall,06,,42.4666667,1.5");
        list.add("ad,aixirvall,Aixirvall,06,,42.4666667,1.5");
        when(file.fileCall("./data/worldcitiespop.csv")).thenReturn(list);
        // List<String> expected = list;
        List<String> actual = file.fileCall("./data/worldcitiespop.csv");

        List<String> data = new ArrayList<String>();
        data.add("6");
        data.add("6");
        data.add("6");

        when(file.fileParse(actual)).thenReturn(data);
        List<String> result = file.fileParse(actual);

        when(file.population(result)).thenReturn(18);

        int finalResult = file.population(result);

        assertEquals(finalResult,18);
    }
}
